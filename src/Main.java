public class Main {
	public static void main(String[] args) {
		/*
		System.out.println("Random Cards:");
		PlayingCard.setRandom(true);
		PlayingCard r1=new PlayingCard();
		System.out.println(r1);
		PlayingCard r2=new PlayingCard();
		System.out.println(r2);
		System.out.println("Queried Cards:");
		PlayingCard.setRandom(false);
		PlayingCard r3=new PlayingCard();
		System.out.println(r3);
		PlayingCard r4=new PlayingCard();
		System.out.println(r4);
		PlayingCard r5=new PlayingCard();
		System.out.println(r5);
		PlayingCard r6=new PlayingCard();
		System.out.println(r6);
		System.out.println("Random Cards:");
		PlayingCard.setRandom(true);
		PlayingCard r7=new PlayingCard();
		System.out.println(r7);
		PlayingCard r8=new PlayingCard();
		System.out.println(r8);
		System.out.println("Entered Cards:");
		PlayingCard p1=new PlayingCard(PlayingCard.SPADES,PlayingCard.ACE);
		System.out.println(p1);
		PlayingCard p2=new PlayingCard(PlayingCard.SPADES,2);
		System.out.println(p2);
		PlayingCard p3=new PlayingCard(PlayingCard.SPADES,3);
		System.out.println(p3);
		PlayingCard p4=new PlayingCard(PlayingCard.SPADES,4);
		System.out.println(p4);
		PlayingCard p5=new PlayingCard(PlayingCard.SPADES,5);
		System.out.println(p5);
		PlayingCard p6=new PlayingCard(PlayingCard.SPADES,6);
		System.out.println(p6);
		PlayingCard p7=new PlayingCard(PlayingCard.SPADES,7);
		System.out.println(p7);
		PlayingCard p8=new PlayingCard(PlayingCard.SPADES,8);
		System.out.println(p8);
		PlayingCard p9=new PlayingCard(PlayingCard.SPADES,9);
		System.out.println(p9);
		PlayingCard p10=new PlayingCard(PlayingCard.SPADES,10);
		System.out.println(p10);
		PlayingCard p11=new PlayingCard(PlayingCard.CLUBS,PlayingCard.JACK);
		System.out.println(p11);
		PlayingCard p12=new PlayingCard(PlayingCard.DIAMONDS,PlayingCard.QUEEN);
		System.out.println(p12);
		PlayingCard p13=new PlayingCard(PlayingCard.HEARTS,PlayingCard.KING);
		System.out.println(p13);
		Hand h1=new Hand(0);
		Hand h2=new Hand(1);
		Hand h3=new Hand(2);
		Hand h4=new Hand(3);
		System.out.println("Number of Cards");
		System.out.println(h1.numberOfCards());
		System.out.println(h2.numberOfCards());
		System.out.println(h3.numberOfCards());
		System.out.println("Nth Card");
		System.out.println(h2.nthCard(1));
		System.out.println(h3.nthCard(1));
		System.out.println(h3.nthCard(2));
		System.out.println(h4.nthCard(1));
		System.out.println(h4.nthCard(2));
		System.out.println(h4.nthCard(3));
		System.out.println("Print");
		h1.print();
		h2.print();
		h3.print();	
		BlackjackHand b1=new BlackjackHand();
		BlackjackHand b2=new BlackjackHand();
		BlackjackHand b3=new BlackjackHand();
		BlackjackHand b4=new BlackjackHand();
		BlackjackHand b5=new BlackjackHand();
		BlackjackHand b6=new BlackjackHand();
		BlackjackHand b7=new BlackjackHand();
		BlackjackHand b8=new BlackjackHand();
		BlackjackHand b9=new BlackjackHand();
		BlackjackHand b10=new BlackjackHand();
		BlackjackHand b11=new BlackjackHand();
		BlackjackHand b12=new BlackjackHand();
		PlayingCard p1=new PlayingCard(1,PlayingCard.ACE);
		PlayingCard p2=new PlayingCard(1,PlayingCard.JACK);
		PlayingCard p3=new PlayingCard(1,PlayingCard.KING);
		PlayingCard p4=new PlayingCard(1,PlayingCard.QUEEN);
		PlayingCard p5=new PlayingCard(1,2);
		PlayingCard p6=new PlayingCard(1,7);
		b1.addCard(p2);
		b1.addCard(p3);
		b1.addCard(p4);
		b2.addCard(p1);
		b2.addCard(p1);
		b3.addCard(p6);
		b3.addCard(p6);
		b3.addCard(p1);
		b4.addCard(p5);
		b4.addCard(p1);
		b5.addCard(p5);
		b5.addCard(p5);
		b5.addCard(p5);
		b5.addCard(p5);
		b5.addCard(p5);
		b5.addCard(p5);
		b6.addCard(p1);
		b6.addCard(p2);
		b7.addCard(p1);
		b7.addCard(p6);
		b7.addCard(p6);
		b8.addCard(p1);
		b8.addCard(p6);
		b9.addCard(p6);
		b9.addCard(p6);
		b9.addCard(p1);
		b10.addCard(p6);
		b10.addCard(p1);
		b11.addCard(p5);
		b11.addCard(p6);
		b12.addCard(p1);
		b12.addCard(p2);
		b12.addCard(p5);
		b1.print();
		System.out.println("Soft: "+b1.soft());
		System.out.println(b1.handValue());
		System.out.println("");
		b2.print();
		System.out.println("Soft: "+b2.soft());
		System.out.println(b2.handValue());
		System.out.println("");
		b3.print();
		System.out.println("Soft: "+b3.soft());
		System.out.println(b3.handValue());
		System.out.println("");
		b4.print();
		System.out.println("Soft: "+b4.soft());
		System.out.println(b4.handValue());
		System.out.println("");
		b5.print();
		System.out.println("Soft: "+b5.soft());
		System.out.println(b5.handValue());
		System.out.println("");
		b6.print();
		System.out.println("Soft: "+b6.soft());
		System.out.println(b6.handValue());
		System.out.println("");
		b7.print();
		System.out.println("Soft: "+b7.soft());
		System.out.println(b7.handValue());
		System.out.println("");
		b8.print();
		System.out.println("Soft: "+b8.soft());
		System.out.println(b8.handValue());
		System.out.println("");
		b9.print();
		System.out.println("Soft: "+b9.soft());
		System.out.println(b9.handValue());
		System.out.println("");
		b10.print();
		System.out.println("Soft: "+b10.soft());
		System.out.println(b10.handValue());
		System.out.println("");
		b11.print();
		System.out.println("Soft: "+b11.soft());
		System.out.println(b11.handValue());
		System.out.println("");
		b12.print();
		System.out.println("Soft: "+b12.soft());
		System.out.println(b12.handValue());
		System.out.println("");	
		BlackjackHand p1=new BlackjackHand(false);
		BlackjackHand d1=new BlackjackHand(true);
		HumanBlackjackPlayer h1=new HumanBlackjackPlayer();
		System.out.println(h1.hit(d1, p1));
		System.out.println(h1.hit(d1, p1));
		System.out.println(h1.hit(d1, p1));
		h1.dealerHit(d1);
		h1.playerBusts(p1);
		h1.playerTies(p1, d1);
		h1.playerWins(p1,d1);
		h1.dealerBusts(d1);
		h1.dealerWins(d1, p1);	
		PlayingCard.setRandom(false);
		BlackjackPlayer player=new HumanBlackjackPlayer();
		BlackjackDealer casd=new BlackjackDealer();
		casd.playBlackjack(player, 7);
		MySimpleStrategy s=new MySimpleStrategy();
		BlackjackPlayer b=new ComputerBlackjackPlayer(s);
		BlackjackDealer d=new BlackjackDealer();
		System.out.println(d.playBlackjack(b, 1000));
		System.out.println(s.hit(15, 11, true));
		System.out.println(s.hit(15, 11, false));
		System.out.println(s.hit(11, 10, false));
		System.out.println(s.hit(17, 7, false));
		System.out.println(s.hit(16, 6, false));
		System.out.println(s.hit(17, 2, true));	
		*/
		BlackjackPlayer b=new HumanBlackjackPlayer();
		BlackjackDealer d=new BlackjackDealer();

		System.out.println(d.playBlackjack(b,10));
		

	

	}
}
